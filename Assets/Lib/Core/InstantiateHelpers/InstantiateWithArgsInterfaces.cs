//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the MolecularCodeGenerator.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     The generator code can be found here, in this github repository:
//     https://github.com/Heymity/MolecularLibCore/tree/main/MolecularAutomaticCodeGenerator
// </auto-generated>
//------------------------------------------------------------------------------
/*  Copyright 2022 Gabriel Pasquale Rodrigues Scavone
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*/

namespace MolecularLib
{
    public interface IArgsInstantiable
    {
        public void Initialize();
    }

    public interface IArgsInstantiable<in TArg0>
    {
        public void Initialize(TArg0 arg0);
    }

    public interface IArgsInstantiable<in TArg0, in TArg1>
    {
        public void Initialize(TArg0 arg0, TArg1 arg1);
    }

    public interface IArgsInstantiable<in TArg0, in TArg1, in TArg2>
    {
        public void Initialize(TArg0 arg0, TArg1 arg1, TArg2 arg2);
    }

    public interface IArgsInstantiable<in TArg0, in TArg1, in TArg2, in TArg3>
    {
        public void Initialize(TArg0 arg0, TArg1 arg1, TArg2 arg2, TArg3 arg3);
    }

    public interface IArgsInstantiable<in TArg0, in TArg1, in TArg2, in TArg3, in TArg4>
    {
        public void Initialize(TArg0 arg0, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4);
    }

    public interface IArgsInstantiable<in TArg0, in TArg1, in TArg2, in TArg3, in TArg4, in TArg5>
    {
        public void Initialize(TArg0 arg0, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5);
    }

    public interface IArgsInstantiable<in TArg0, in TArg1, in TArg2, in TArg3, in TArg4, in TArg5, in TArg6>
    {
        public void Initialize(TArg0 arg0, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5, TArg6 arg6);
    }

    public interface IArgsInstantiable<in TArg0, in TArg1, in TArg2, in TArg3, in TArg4, in TArg5, in TArg6, in TArg7>
    {
        public void Initialize(TArg0 arg0, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5, TArg6 arg6, TArg7 arg7);
    }

    public interface IArgsInstantiable<in TArg0, in TArg1, in TArg2, in TArg3, in TArg4, in TArg5, in TArg6, in TArg7, in TArg8>
    {
        public void Initialize(TArg0 arg0, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5, TArg6 arg6, TArg7 arg7, TArg8 arg8);
    }

    public interface IArgsInstantiable<in TArg0, in TArg1, in TArg2, in TArg3, in TArg4, in TArg5, in TArg6, in TArg7, in TArg8, in TArg9>
    {
        public void Initialize(TArg0 arg0, TArg1 arg1, TArg2 arg2, TArg3 arg3, TArg4 arg4, TArg5 arg5, TArg6 arg6, TArg7 arg7, TArg8 arg8, TArg9 arg9);
    }

}
